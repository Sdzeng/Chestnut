<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tx      http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       ">

    <context:property-placeholder location="classpath:datasource.properties" />

    <context:annotation-config />

    <!-- enable transaction demarcation with annotations -->
    <tx:annotation-driven />

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="autoCommitOnClose" value="true" />
        <property name="minPoolSize" value="${jdbc.pool.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc.pool.maxPoolSize}" />
        <property name="initialPoolSize" value="${jdbc.pool.initialPoolSize}" />
        <property name="maxIdleTime" value="${jdbc.pool.maxIdleTime}" />
        <property name="acquireIncrement" value="${jdbc.pool.acquireIncrement}" />
        <property name="acquireRetryAttempts" value="${jdbc.pool.acquireRetryAttempts}" />
        <property name="checkoutTimeout" value="${jdbc.pool.checkoutTimeout}" />

        <property name="driverClass" value="${datasource.auth.driver}" />
        <property name="jdbcUrl" value="${datasource.auth.url}" />
        <property name="user" value="${datasource.auth.username}" />
        <property name="password" value="${datasource.auth.password}" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描mappers.xml文件 -->
        <property name="mapperLocations" value="classpath:com/arbor/chestnut/repository/mapper/*.xml" />
          <!-- 为com.arbor.chestnut.repository.entity包下的所有实体类配置别名，
               MyBatis默认的设置别名的方式就是去除类所在的包后的简单的类名
                                       比如com.arbor.chestnut.repository.entity.UserModel这个实体类的别名就会被设置成UserModel
                                      简化sql映射xml文件中的引用  -->
        <property name="typeAliasesPackage" value="com.arbor.chestnut.repository.entity" />
        <!-- mybatis配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>
    <bean id="dataScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.arbor.chestnut.repository.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

<!--     <context:component-scan base-package="cn.com.ykse" /> -->

</beans>
